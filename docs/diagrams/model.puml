@startuml

package "model" {

    class Ingredient {
        +String ingredientName
        +int quantity
        +Ingredient(String ingredientName, int quantity)
        +int hashCode()
        +String getIngredientName()
        +void setIngredientName(String ingredientName)
        +void setQuantity(int quantity)
        +int getQuantity()
        +void addQuantity(int quantity)
        +void subtractQuantity(int quantity)
    }

    package "catalogue" {

        abstract class Catalogue<T> {
            -ArrayList<T> items
            +Catalogue()
            +abstract CommandResult addItem(T item, boolean isSilenced)
            +abstract CommandResult deleteItem(T item)
            +void updateItem(T oldItem, T newItem)
            +ArrayList<T> getItems()
            +CommandResult listItems()
            +CommandResult findItem(String query)
            +String getCatalogueContent()
            +abstract T getItemByName(String name)
        }

        class IngredientCatalogue extends Catalogue<Ingredient> {
            +searchSimilarIngredient(ingredient : Ingredient) : ArrayList<Ingredient>
            +getItemByName(name : String) : Ingredient
            +isExactMatchFound(existingIngredient : Ingredient, newIngredient : Ingredient) : boolean
            +addItem(ingredient : Ingredient, isSilenced : boolean) : CommandResult
            +addIngredient(ingredient : Ingredient) : CommandResult
            +increaseQuantity(existingIngredient : Ingredient, newIngredient : Ingredient) : CommandResult
            +deleteItem(ingredient : Ingredient) : CommandResult
            +removeIngredient(ingredient : Ingredient) : CommandResult
            +removeAllIngredients() : CommandResult
            +decreaseQuantity(existingIngredient : Ingredient, newIngredient : Ingredient) : CommandResult
            +findItem(query : String) : CommandResult
            +adjustQuantity(existing : Ingredient, newQuantity : int) : CommandResult
            +editItem(ingredient : Ingredient) : CommandResult
        }

        class Recipe extends IngredientCatalogue {
            -String recipeName
            +Recipe()
            +Recipe(name : String)
            +Recipe(name : String, ingredients : ArrayList<Ingredient>)
            +getRecipeName() : String
            +listItems() : CommandResult
        }

        class RecipeBook extends Catalogue<Recipe> {
            +RecipeBook()
            +getCatalogueContent() : String
            +searchSimilarRecipe(recipe : Recipe) : ArrayList<Recipe>
            +getItemByName(name : String) : Recipe
            +addItem(recipe : Recipe, isSilenced : boolean) : CommandResult
            +deleteItem(recipe : Recipe) : CommandResult
            +editItem(oldRecipe : Recipe, newRecipe : Recipe) : CommandResult
            +listItems() : CommandResult
            +findItem(query : String) : CommandResult
            +getType() : String
            -getRecipeNameLowercase(recipe : Recipe) : String
            -isExactMatchFound(existingRecipe : Recipe, newRecipe : Recipe) : boolean
            -addRecipe(recipe : Recipe) : CommandResult
            -removeRecipe(recipe : Recipe) : void
        }

        class Inventory extends IngredientCatalogue {
            +getType() : String
            +listItems() : CommandResult
            #getCatalogueLabel() : String
        }
    }
}

' Relationships
IngredientCatalogue *-- "0..*" Ingredient
Inventory *-- "0..*" Ingredient
Recipe *-- "0..*" Ingredient
RecipeBook *-- "0..*" Recipe

@enduml
