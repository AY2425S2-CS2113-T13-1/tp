@startuml
hide circle
skinparam classAttributeIconSize 0

package model.catalogue {

    class "{abstract} \n Catalogue<T>" {
        - items : ArrayList<T>
        + Catalogue()
        + getItems() : ArrayList<T>
        + updateItem(oldItem : T, newItem : T)
        + listItems() : CommandResult
        + getCatalogueContent() : String
        + addItem(item : T, isSilenced : boolean) : CommandResult
        + deleteItem(item : T) : CommandResult
        + findItem(query : String, extractor : Function<T, String>) : CommandResult
        + findItem(query : String) : CommandResult
        + getType() : String
        + getItemByName(name : String) : T
    }

    class RecipeBook {
        + RecipeBook()
        + addItem(recipe: Recipe): CommandResult
        + deleteItem(recipe: Recipe): CommandResult
        + editItem(oldRecipe: Recipe, newRecipe: Recipe): CommandResult
        + listItems(): CommandResult
        - addRecipe(recipe: Recipe): void
        - removeRecipe(recipe: Recipe): void
        - getRecipeNameLowercase(recipe: Recipe): String
        - isExactMatchFound(existingRecipe: Recipe, newRecipe: Recipe): boolean
        + searchSimilarRecipe(recipe: Recipe): ArrayList<Recipe>
    }

    class Recipe {
        - recipeName : String
        + Recipe()
        + Recipe(name : String)
        + Recipe(name : String, ingredients : ArrayList<Ingredient>)
        + getRecipeName() : String
        + getType() : String
        + listItems() : CommandResult
        + toString() : String
    }

    "{abstract} \n Catalogue<T>" <|-- RecipeBook
}

package commands {
    class CommandResult {
        - feedbackToUser: String
        + getFeedbackToUser(): String
    }
}

package ui.inputparser {
    class ConflictHelper {
        - <u>scanner : Scanner
        - <u>getContextLabel() : String
        + <u>setScanner(testScanner: Scanner)
        + <u>getUserChoiceForAddIngredient(similarIngredient: ArrayList<Ingredient>, newIngredient: Ingredient) : int
        + <u>getUserChoiceForDeleteIngredient(similarIngredient: ArrayList<Ingredient>, newItem: Ingredient) : int
        + <u>getUserChoiceForEditIngredient(similarIngredient: ArrayList<Ingredient>, newItem: Ingredient) : int
        + <u>getUserChoiceForAddRecipe(similarRecipe: ArrayList<Recipe>, newRecipe: Recipe) : int
        + <u>getUserChoiceForDeleteRecipe(similarRecipe: ArrayList<Recipe>, newRecipe: Recipe) : int
        + <u>getUserChoiceForEditRecipe(similarRecipe: ArrayList<Recipe>, newRecipe: Recipe) : int
        - <u>parseQuantity(quantityStr: String) : double
    }
}

RecipeBook --> Recipe
RecipeBook --> CommandResult
RecipeBook -> ConflictHelper

@enduml